{"version":3,"sources":["Components/Cards/Card.jsx","Components/Cards/Cards.jsx","api/index.js","Components/HOC/Wrapper.js","Components/Helper/Debounce.js","Components/Helper/WindowDimensionHelper.js","Theme/ChartThemeHelper.js","Components/Charts/SummaryChart.jsx","Components/AppBar/AsyncSearch.jsx","Components/AppBar/HeaderAppBar.jsx","Components/Summary/Summary.jsx","Components/Charts/CountryChart.jsx","Components/CountrySummary/CountrySummary.jsx","Theme/ThemeHelper.js","Components/Helper/CountryHelper.js","App.js","serviceWorker.js","index.js","App.module.css","Components/Cards/Cards.module.css","Components/Charts/Charts.module.css","Assets/confirmed.svg","Assets/deaths.svg","Assets/recovered.svg"],"names":["_Card","props","count","data","value","start","end","duration","separator","Card","className","cx","styles","root","type","CardActionArea","textCenter","alt","src","img","media","CardContent","Typography","variant","gutterBottom","component","messages","heading","color","subHeading","Cards","confirmedData","confirmed","recoveredData","recovered","deathsData","deaths","Grid","grid","url","fetchSummary","a","axios","get","response","console","error","fetchCountrySummary","country","fetchCountries","fetchDaily","formattedData","map","dailyData","total","date","reportDate","Wrapper","children","debounce","func","wait","immediate","timeout","context","this","args","arguments","later","apply","callNow","clearTimeout","setTimeout","getWindowDimensions","window","width","innerWidth","height","innerHeight","useWindowDimensions","useState","windowDimensions","setWindowDimensions","useEffect","handleResize","log","addEventListener","removeEventListener","chartThemeHelper","options","chart","id","legend","show","labels","colors","useSeriesColors","itemMargin","vertical","dataLabels","enabled","stroke","curve","xaxis","categories","dates","yaxis","theme","style","tooltip","chartWidth","SummaryChart","setDailyData","series","curState","ChartThemeHelper","curTheme","name","fetchApi","lineChart","container","AsyncSearch","React","open","setOpen","setOptions","loading","length","active","countries","Autocomplete","size","onOpen","onClose","onChange","e","routerHelper","getOptionSelected","option","getOptionLabel","renderInput","params","TextField","label","InputProps","endAdornment","Fragment","CircularProgress","useStyles","makeStyles","flexGrow","menuButton","marginRight","spacing","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","searchDark","black","searchIcon","padding","pointerEvents","alignItems","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","HeaderAppBar","classes","AppBar","Toolbar","IconButton","edge","aria-label","noWrap","onClick","themeToggleHandler","Summary","state","summary","bgClass","light","dark","setState","Component","CountryChart","countryData","setCountryData","events","click","w","plotOptions","bar","columnWidth","distributed","fontSize","barChart","CountrySummary","getCountrySummary","match","replace","nextProps","nextState","countryChanged","themeChanged","themeHelper","createMuiTheme","primary","main","secondary","countryValidator","getCountry","App","location","pathname","toggleTheme","history","push","getCountryForSearch","ThemeProvider","ThemeHelper","path","withRouter","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message","module","exports"],"mappings":"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","file":"static/js/main.7ff946c5.chunk.js","sourcesContent":["import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport styles from './Cards.module.css';\r\nimport messages from '../../Messages/messages.json';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nconst _Card = (props) => {\r\n    let count = null;\r\n    if(!props.data.value){\r\n        count = props.data.value === 0 ? 0 : \"...\";\r\n    }else{\r\n        count = <CountUp start={0} end={props.data.value} duration={1} separator=\",\"/>\r\n    }\r\n    return (\r\n        <Card className={cx(styles.root,styles[props.data.type])}>\r\n            <CardActionArea className={styles.textCenter}>\r\n                <img alt={props.data.type} src={props.data.img} className={styles.media}></img>\r\n                <CardContent>\r\n                    <Typography variant=\"h4\">\r\n                        <b> {count}\r\n                         </b>\r\n                    </Typography>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                        {messages[props.data.type].heading}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                        {messages[props.data.type].subHeading}\r\n                    </Typography>\r\n                </CardContent>\r\n            </CardActionArea>            \r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default _Card;","import React from 'react';\r\nimport Card from './Card';\r\nimport { Grid } from '@material-ui/core';\r\nimport { confirmed, recovered, deaths } from '../../Assets';\r\nimport styles from './Cards.module.css';\r\n\r\nconst Cards = (props) => {\r\n    const confirmedData = { ...props.data.confirmed, img: confirmed, type: \"confirmed\" };\r\n    const recoveredData = { ...props.data.recovered, img: recovered, type: \"recovered\" };\r\n    const deathsData = { ...props.data.deaths, img: deaths, type: \"deaths\" };\r\n    const render = (        \r\n            <Grid className={styles.grid}>                \r\n                <Card data={confirmedData}></Card>               \r\n                <Card data={recoveredData}></Card>\r\n                <Card data={deathsData}></Card>\r\n            </Grid>\r\n        );\r\n    return render;\r\n}\r\nexport default Cards;","import axios from 'axios';\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchSummary = async () => {\r\n    try{\r\n        const response = await axios.get(url);\r\n        return response;\r\n    }catch{\r\n        console.error(\"[fetchData] Failed\");\r\n    }    \r\n}\r\nexport const fetchCountrySummary = async (country) => {\r\n    try{\r\n        const {data} = await axios.get(url+\"/countries\"+country);\r\n        return data;\r\n    }catch{\r\n        console.error('[fetchCountrySummary] Failed')\r\n    }\r\n}\r\n\r\nexport const fetchCountries = async () => {\r\n    try{\r\n        const response = await axios.get(url+\"/countries\");\r\n        return response.data;\r\n    }catch{\r\n        console.error(\"[fetchCountries] Failed\");\r\n    }\r\n}\r\n\r\nexport const fetchDaily = async () => {\r\n    try{        \r\n        const {data} = await axios.get(url+\"/daily\");        \r\n        const formattedData = data.map((dailyData)=> ({\r\n            confirmed: dailyData.confirmed.total,\r\n            deaths:dailyData.deaths.total,\r\n            date:dailyData.reportDate\r\n        }));  \r\n        \r\n        return formattedData;\r\n        \r\n    }catch{\r\n        console.error(\"[fetchDaily] Failed\");\r\n    }\r\n}","import React from 'react';\r\nconst Wrapper = (props) => <div className={props.className}>{props.children}</div>;\r\n\r\nexport default Wrapper;","const debounce = (func, wait, immediate) => {\r\n    var timeout;\r\n    return function() {\r\n        var context = this, args = arguments;\r\n        var later = function() {\r\n            timeout = null;\r\n            if (!immediate) func.apply(context, args);\r\n        };\r\n        var callNow = immediate && !timeout;\r\n        clearTimeout(timeout);\r\n        timeout = setTimeout(later, wait);\r\n        if (callNow) func.apply(context, args);\r\n    }\r\n}\r\n\r\nexport default debounce;","import { useState, useEffect } from 'react';\r\nimport debounce from './Debounce';\r\nfunction getWindowDimensions() {\r\n  const { innerWidth: width, innerHeight: height } = window;\r\n  return {\r\n    width,\r\n    height\r\n  };\r\n}\r\n\r\nexport default function useWindowDimensions() {\r\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      console.log(\"window resized\");\r\n      setWindowDimensions(getWindowDimensions());\r\n    }\r\n\r\n    window.addEventListener('resize', debounce(handleResize,200));\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  return windowDimensions;\r\n}","const chartThemeHelper = (data) => {\r\n  let options = {\r\n    chart: {\r\n      id: \"basic-bar\"\r\n    },    \r\n    legend: {\r\n      show: true,\r\n      labels: {\r\n        colors: ['#368bf6', '#eb5569'],\r\n        useSeriesColors: false\r\n      }, itemMargin: {\r\n        vertical: 10\r\n      },\r\n    },\r\n    dataLabels: {\r\n      enabled: false\r\n    }, \r\n    stroke: {\r\n      curve: 'straight'\r\n    },\r\n    colors: ['#368bf6', '#eb5569'],\r\n    xaxis: {\r\n      categories: data.dates\r\n    },\r\n    yaxis:{}\r\n  };\r\n  if (data.theme !== \"light\") {\r\n    options.xaxis.labels = {\r\n      style: {\r\n        colors: '#FFFFFF'\r\n      }\r\n    };  \r\n    options.yaxis.labels = {\r\n      style: {\r\n        colors: '#FFFFFF'\r\n      }\r\n    };  \r\n    \r\n  }else{\r\n    options.xaxis.labels = {\r\n      style: {\r\n        colors: '#373d3f'\r\n      }\r\n    };\r\n    options.yaxis.labels = {\r\n      style: {\r\n        colors: '#373d3f'\r\n      }\r\n    };\r\n    \r\n  }\r\n  options.tooltip = {theme:data.theme };\r\n  return options;\r\n}\r\nexport default chartThemeHelper;","import React, { useState, useEffect } from \"react\";\r\nimport Chart from \"react-apexcharts\";\r\nimport Wrapper from '../HOC/Wrapper';\r\nimport styles from './Charts.module.css';\r\nimport { fetchDaily } from '../../api';\r\nimport useWindowDimensions from '../Helper/WindowDimensionHelper';\r\nimport ChartThemeHelper from '../../Theme/ChartThemeHelper';\r\nconst chartWidth = { mobile: 0.95, other: 0.85 };\r\nconst SummaryChart = (props) => {\r\n  const { height, width } = useWindowDimensions();\r\n  const [dailyData, setDailyData] = useState({});\r\n  useEffect(() => {\r\n    const fetchApi = async () => {\r\n      if (dailyData && dailyData.options && dailyData.series) {\r\n        const curState = { ...dailyData };\r\n        const options = ChartThemeHelper({ dates: curState.dates, theme: props.curTheme });\r\n        curState.options = options;\r\n        setDailyData({ dates: curState.dates, options: curState.options, series: curState.series });\r\n      } else {\r\n        const data = await fetchDaily();\r\n        const dates = data.map(({ date }) => date);\r\n        const options = ChartThemeHelper({ dates, theme: props.curTheme });\r\n\r\n        const series = [\r\n          {\r\n            name: \"Confirmed\",\r\n            data: data.map(({ confirmed }) => confirmed)\r\n          },\r\n          {\r\n            name: \"Deaths\",\r\n            data: data.map(({ deaths }) => deaths)\r\n          }\r\n        ];\r\n        setDailyData({ dates, options: options, series: series });\r\n      }\r\n\r\n    }\r\n\r\n    fetchApi();\r\n    // eslint-disable-next-line\r\n  }, [props.curTheme]);//we GET chart data only once but re-render in case the theme changes\r\n\r\n  let lineChart = (\r\n    dailyData && dailyData.options && dailyData.series ? <Chart\r\n      options={dailyData.options}\r\n      series={dailyData.series}\r\n      type=\"area\"\r\n      width={width < 768 ? width * chartWidth.mobile : width * chartWidth.other}\r\n      height={0.6 * height}\r\n    /> : \"\"\r\n  );\r\n  return (\r\n    <Wrapper className={styles.container}>\r\n      {lineChart}\r\n    </Wrapper>\r\n\r\n  );\r\n\r\n}\r\n\r\nexport default SummaryChart;","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { fetchCountries } from '../../api';\r\n\r\nconst AsyncSearch = (props) => {  \r\n  const [open, setOpen] = React.useState(false);\r\n  const [options, setOptions] = React.useState([]);\r\n  const loading = open && options.length === 0;\r\n\r\n  React.useEffect(() => {\r\n    let active = true;\r\n\r\n    if (!loading) {\r\n      return undefined;\r\n    }\r\n\r\n    (async () => {\r\n      const {countries} = await fetchCountries();\r\n      \r\n\r\n      if (active) {\r\n        setOptions(countries);\r\n      }\r\n    })();\r\n\r\n    return () => {\r\n      active = false;\r\n    };\r\n  }, [loading]);\r\n\r\n  return (\r\n    <Autocomplete\r\n      id=\"asynchronous-demo\"\r\n      style={{ width: 300 }}\r\n      size=\"small\"\r\n      open={open}\r\n      onOpen={() => {\r\n        setOpen(true);\r\n      }}\r\n      onClose={() => {\r\n        setOpen(false);\r\n      }}\r\n      value={props.country}\r\n      onChange={(e,value)=>props.routerHelper(value)}\r\n      getOptionSelected={(option, value) => option.name === value.name}\r\n      getOptionLabel={(option) => option.name}\r\n      options={options}\r\n      loading={loading}      \r\n      renderInput={(params) => (\r\n        <TextField\r\n          {...params}\r\n          label=\"Select Country\"\r\n          variant=\"outlined\"\r\n          color=\"secondary\"\r\n          InputProps={{\r\n            ...params.InputProps,\r\n            endAdornment: (\r\n              <React.Fragment>\r\n                {loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                {params.InputProps.endAdornment}\r\n              </React.Fragment>\r\n            ),\r\n          }}\r\n        />\r\n      )}\r\n    />\r\n  );\r\n  \r\n}\r\n\r\nexport default AsyncSearch;\r\n","import React from 'react';\r\nimport {Toolbar,AppBar,IconButton,Typography} from '@material-ui/core';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport Light from '@material-ui/icons/Brightness7';\r\nimport Dark from '@material-ui/icons/Brightness4';\r\nimport AsyncSearch from './AsyncSearch';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchDark: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.black, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.black, 0.25),\r\n    },\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: '12ch',\r\n      '&:focus': {\r\n        width: '20ch',\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function HeaderAppBar(props) {\r\n  const classes = useStyles();\r\n  \r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"fixed\">\r\n        <Toolbar>\r\n        <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography className={classes.title} variant=\"h6\" noWrap>\r\n            Covid-19 Tracker\r\n          </Typography>\r\n          \r\n          <AsyncSearch country={props.country} routerHelper={props.routerHelper}></AsyncSearch>\r\n          <IconButton\r\n            edge=\"end\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"Toggle Dark and Light mode\"\r\n            onClick={() => props.themeToggleHandler()}>\r\n            {props.curTheme === \"light\" ? <Light /> : <Dark />}\r\n\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { fetchSummary } from '../../api';\r\nimport styles from '../../App.module.css';\r\nimport cx from 'classnames';\r\nimport {Cards,SummaryChart,Wrapper} from '../index';\r\n\r\nclass Summary extends React.Component {\r\n    state = {\r\n        summary: {}\r\n    }\r\n    render() {\r\n        let bgClass = this.props.theme === \"light\" ? styles.light : styles.dark;\r\n        return (\r\n            <Wrapper className={cx(styles.container, bgClass)}>\r\n                <Cards data={this.state.summary}></Cards>\r\n                <SummaryChart curTheme={this.props.theme}></SummaryChart>\r\n            </Wrapper>\r\n        );\r\n    }\r\n    async componentDidMount() {\r\n        var response = await fetchSummary();\r\n        this.setState({ summary: response.data });\r\n    }\r\n}\r\n\r\nexport default Summary;","import React, { useState, useEffect } from \"react\";\r\nimport Chart from \"react-apexcharts\";\r\nimport Wrapper from '../HOC/Wrapper';\r\nimport styles from './Charts.module.css';\r\nimport useWindowDimensions from '../Helper/WindowDimensionHelper';\r\n\r\nconst CountryChart = (props) => {\r\n  const { height, width } = useWindowDimensions();\r\n  const [countryData, setCountryData] = useState({});\r\n  \r\n  useEffect(() => {\r\n    if(props.data && props.data.confirmed){\r\n    const {confirmed,recovered,deaths} = {...props.data};\r\n    setCountryData({          \r\n        series: [{\r\n          name:\"Covid-19 Cases\",\r\n          data: [confirmed.value,recovered.value,deaths.value]\r\n        }],\r\n        options: {\r\n          chart: {\r\n            height: 350,\r\n            type: 'bar',\r\n            events: {\r\n              click: function(chart, w, e) {\r\n                // console.log(chart, w, e)\r\n              }\r\n            }\r\n          },\r\n          colors: ['#368bf6','#00af80','#eb5569'],\r\n          plotOptions: {\r\n            bar: {\r\n              columnWidth: '45%',\r\n              distributed: true\r\n            }\r\n          },\r\n          dataLabels: {\r\n            enabled: false\r\n          },\r\n          legend: {\r\n            show: false\r\n          },\r\n          xaxis: {\r\n            categories: [\r\n              ['Confirmed'],\r\n              ['Recovered'],\r\n              ['Deaths']\r\n            ],\r\n            labels: {\r\n              style: {\r\n                colors: ['#368bf6','#00af80','#eb5569'],\r\n                fontSize: '12px'\r\n              }\r\n            }\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }, [props.curTheme,props.data]);\r\n  let barChart = (\r\n    countryData && countryData.options && countryData.series ? <Chart\r\n      options={countryData.options}\r\n      series={countryData.series}\r\n      type=\"bar\"\r\n      width={width < 768 ? width : 0.85 * width}\r\n      height={0.6 * height}\r\n    /> : \"\"\r\n  );\r\n return (\r\n    <Wrapper className={styles.container}>\r\n      {barChart}\r\n    </Wrapper>\r\n\r\n  );\r\n\r\n}\r\n\r\nexport default CountryChart;","import React from 'react';\r\nimport { fetchCountrySummary } from '../../api';\r\nimport styles from '../../App.module.css';\r\nimport cx from 'classnames';\r\nimport { Cards, Wrapper } from '../index';\r\nimport CountryChart from '../Charts/CountryChart';\r\n\r\nclass CountrySummary extends React.Component {\r\n    state = {\r\n        summary: {},\r\n        country: null\r\n    }\r\n    render() {\r\n        let bgClass = this.props.theme === \"light\" ? styles.light : styles.dark;\r\n        return (\r\n            <Wrapper className={cx(styles.container, bgClass)}>\r\n                <Cards data={this.state.summary}></Cards>\r\n                <CountryChart data={this.state.summary}></CountryChart>\r\n            </Wrapper>\r\n        );\r\n    }\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        let countryChanged = nextProps.country !== this.props.country || nextState.country !== this.state.country;\r\n        let themeChanged = nextProps.theme !== this.props.theme;\r\n        return countryChanged || themeChanged;\r\n    }\r\n    async componentDidUpdate() {\r\n        if (this.state.country !== this.props.country) {\r\n            await this.getCountrySummary();\r\n        }\r\n    }\r\n    async componentDidMount() {\r\n        await this.getCountrySummary();\r\n    }\r\n    getCountrySummary = async() => {\r\n        if (this.props.country.match(\"^/covid-app/country/\")) {\r\n            let country = this.props.country;\r\n            country = country.replace(\"/covid-app/country\", \"\");\r\n            let response = await fetchCountrySummary(country);            \r\n            this.setState({ summary: response, country: this.props.country });\r\n        }\r\n    }\r\n}\r\n\r\nexport default CountrySummary;","import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nconst themeHelper = (theme) => {\r\n    if (theme === \"light\") {\r\n        return createMuiTheme({\r\n            palette: {\r\n              primary: {\r\n                main : \"#FFFFFF\"\r\n              },\r\n              secondary:{\r\n                main : '#368bf6'\r\n              },\r\n              type:\"light\"\r\n            }\r\n        });\r\n    } else {\r\n        return createMuiTheme({\r\n            palette: {\r\n              primary: {\r\n                main : \"#333\"\r\n              },\r\n              secondary:{\r\n                main : '#368bf6'\r\n              },\r\n              type:\"dark\"\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport default themeHelper;","export const countryValidator = (country) => {\r\n    return country.match(\"^/covid-app/country/\") ? country : null;\r\n}\r\n\r\nexport const getCountry = (country) => {\r\n    if(country && country.match(\"^/covid-app/country/\"))\r\n        return country.replace(\"/covid-app/country/\", \"\");\r\n    else\r\n        return null;\r\n}","import React from 'react';\r\nimport { AppBar } from './Components';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport ThemeHelper from './Theme/ThemeHelper';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { Summary, CountrySummary } from './Components/index';\r\nimport { withRouter } from 'react-router';\r\nimport {countryValidator,getCountry} from './Components/Helper/CountryHelper';\r\n\r\nlet light = \"light\", dark = \"dark\";\r\nclass App extends React.Component {\r\n\r\n  state = {\r\n    theme: light,\r\n    country: countryValidator(this.props.location.pathname)\r\n  }\r\n  render() {\r\n    return (\r\n      <ThemeProvider theme={ThemeHelper(this.state.theme)}>\r\n        <AppBar country={this.getCountryForSearch()} curTheme={this.state.theme} themeToggleHandler={() => this.toggleTheme()} routerHelper={(value) => this.routerHelper(value)}></AppBar>\r\n        <Switch>\r\n          <Route path=\"/covid-app/country/*\"><CountrySummary theme={this.state.theme} country={this.state.country}></CountrySummary></Route>\r\n          <Route><Summary theme={this.state.theme}></Summary></Route>\r\n        </Switch>\r\n      </ThemeProvider>\r\n    );\r\n  }\r\n\r\n  toggleTheme = () => {\r\n    this.state.theme === light ? this.setState({ theme: dark }) : this.setState({ theme: light });\r\n  }\r\n  routerHelper = (value) => {\r\n    if (value) {\r\n      this.setState({ country: `/covid-app/country/${value.name}` });\r\n\r\n      const { history } = this.props;\r\n      if (value)\r\n        history.push(`/covid-app/country/${value.name}`);\r\n      else\r\n        history.push('/covid-app');\r\n    }\r\n  }\r\n  getCountryForSearch = () => {\r\n    return {name : getCountry(this.state.country)};\r\n  }\r\n}\r\n\r\nexport default withRouter(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3nRKY\",\"dark\":\"App_dark__2RHWN\",\"light\":\"App_light__1YEDc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Cards_root__AIwn0\",\"confirmed\":\"Cards_confirmed__1S-9n\",\"recovered\":\"Cards_recovered__3kq5D\",\"deaths\":\"Cards_deaths__1eD8I\",\"media\":\"Cards_media__1Lp0D\",\"textCenter\":\"Cards_textCenter__AF1Sm\",\"grid\":\"Cards_grid__1DNkZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Charts_container__mmPiY\"};","module.exports = __webpack_public_path__ + \"static/media/confirmed.df488cb3.svg\";","module.exports = __webpack_public_path__ + \"static/media/deaths.4e113c7e.svg\";","module.exports = __webpack_public_path__ + \"static/media/recovered.011ed21c.svg\";"],"sourceRoot":""}