{"version":3,"sources":["Components/Cards/Cards.module.css","Components/Cards/Card.jsx","Components/Cards/Cards.jsx","api/index.js","Components/HOC/Wrapper.js","Components/Helper/WindowDimensionHelper.js","Theme/ChartThemeHelper.js","Components/Charts/NewCharts.jsx","Components/AppBar/HeaderAppBar.jsx","Theme/ThemeHelper.js","App.js","serviceWorker.js","index.js","Components/Charts/Charts.module.css","App.module.css","Assets/confirmed.svg","Assets/deaths.svg","Assets/recovered.svg"],"names":["module","exports","_Card","props","Card","className","cx","styles","root","data","type","CardActionArea","textCenter","alt","src","img","media","CardContent","Typography","variant","value","start","end","duration","separator","gutterBottom","component","messages","heading","color","subHeading","Cards","confirmedData","confirmed","recoveredData","recovered","deathsData","deaths","Grid","grid","url","fetchSummary","a","axios","get","response","console","error","fetchDaily","formattedData","map","dailyData","total","date","reportDate","Wrapper","children","getWindowDimensions","window","width","innerWidth","height","innerHeight","chartThemeHelper","options","chart","id","legend","show","labels","colors","useSeriesColors","itemMargin","vertical","dataLabels","enabled","stroke","curve","xaxis","categories","dates","yaxis","theme","style","tooltip","NewCharts","useState","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","useWindowDimensions","setDailyData","series","curState","ChartThemeHelper","curTheme","name","fetchApi","lineChart","container","useStyles","makeStyles","flexGrow","menuButton","marginRight","spacing","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","searchDark","black","searchIcon","padding","pointerEvents","alignItems","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","HeaderAppBar","classes","AppBar","Toolbar","noWrap","InputBase","placeholder","input","inputProps","IconButton","edge","aria-label","onClick","themeToggleHandler","themeHelper","createMuiTheme","primary","main","App","state","summary","toggleTheme","setState","bgClass","this","light","dark","ThemeProvider","ThemeHelper","React","Component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.21b0c818.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Cards_root__AIwn0\",\"confirmed\":\"Cards_confirmed__1S-9n\",\"recovered\":\"Cards_recovered__3kq5D\",\"deaths\":\"Cards_deaths__1eD8I\",\"media\":\"Cards_media__1Lp0D\",\"textCenter\":\"Cards_textCenter__AF1Sm\",\"grid\":\"Cards_grid__1DNkZ\"};","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport styles from './Cards.module.css';\r\nimport messages from '../../Messages/messages.json';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nconst _Card = (props) => {\r\n    return (\r\n        <Card className={cx(styles.root,styles[props.data.type])}>\r\n            <CardActionArea className={styles.textCenter}>\r\n                <img alt={props.data.type} src={props.data.img} className={styles.media}></img>\r\n                <CardContent>\r\n                    <Typography variant=\"h4\">\r\n                        <b> {props.data.value ? \r\n                            <CountUp start={0} end={props.data.value} duration={1} separator=\",\"/>\r\n                            : \"...\"}\r\n                         </b>\r\n                    </Typography>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                        {messages[props.data.type].heading}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                        {messages[props.data.type].subHeading}\r\n                    </Typography>\r\n                </CardContent>\r\n            </CardActionArea>            \r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default _Card;","import React from 'react';\r\nimport Card from './Card';\r\nimport { Grid } from '@material-ui/core';\r\nimport { confirmed, recovered, deaths } from '../../Assets';\r\nimport styles from './Cards.module.css';\r\n\r\nconst Cards = (props) => {\r\n    const confirmedData = { ...props.data.confirmed, img: confirmed, type: \"confirmed\" };\r\n    const recoveredData = { ...props.data.recovered, img: recovered, type: \"recovered\" };\r\n    const deathsData = { ...props.data.deaths, img: deaths, type: \"deaths\" };\r\n    const render = (        \r\n            <Grid className={styles.grid}>                \r\n                <Card data={confirmedData}></Card>               \r\n                <Card data={recoveredData}></Card>\r\n                <Card data={deathsData}></Card>\r\n            </Grid>\r\n        );\r\n    return render;\r\n}\r\nexport default Cards;","import axios from 'axios';\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchSummary = async () => {\r\n    try{\r\n        const response = await axios.get(url);\r\n        return response;\r\n    }catch{\r\n        console.error(\"[fetchData] Failed\");\r\n    }    \r\n}\r\n\r\nexport const fetchCountries = async () => {\r\n    try{\r\n        const response = await axios.get(url+\"/countries\");\r\n        return response;\r\n    }catch{\r\n        console.error(\"[fetchCountries] Failed\");\r\n    }\r\n}\r\n\r\nexport const fetchDaily = async () => {\r\n    try{        \r\n        const {data} = await axios.get(url+\"/daily\");        \r\n        const formattedData = data.map((dailyData)=> ({\r\n            confirmed: dailyData.confirmed.total,\r\n            deaths:dailyData.deaths.total,\r\n            date:dailyData.reportDate\r\n        }));  \r\n        //console.log(formattedData);\r\n        return formattedData;\r\n        \r\n    }catch{\r\n        console.error(\"[fetchDaily] Failed\");\r\n    }\r\n}","import React from 'react';\r\nconst Wrapper = (props) => <div className={props.className}>{props.children}</div>;\r\n\r\nexport default Wrapper;","import { useState, useEffect } from 'react';\r\n\r\nfunction getWindowDimensions() {\r\n  const { innerWidth: width, innerHeight: height } = window;\r\n  return {\r\n    width,\r\n    height\r\n  };\r\n}\r\n\r\nexport default function useWindowDimensions() {\r\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowDimensions(getWindowDimensions());\r\n    }\r\n\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  return windowDimensions;\r\n}","const chartThemeHelper = (data) => {\r\n  let options = {\r\n    chart: {\r\n      id: \"basic-bar\"\r\n    },    \r\n    legend: {\r\n      show: true,\r\n      labels: {\r\n        colors: ['#368bf6', '#eb5569'],\r\n        useSeriesColors: false\r\n      }, itemMargin: {\r\n        vertical: 10\r\n      },\r\n    },\r\n    dataLabels: {\r\n      enabled: false\r\n    }, \r\n    stroke: {\r\n      curve: 'straight'\r\n    },\r\n    colors: ['#368bf6', '#eb5569'],\r\n    xaxis: {\r\n      categories: data.dates\r\n    },\r\n    yaxis:{}\r\n  };\r\n  if (data.theme !== \"light\") {\r\n    options.xaxis.labels = {\r\n      style: {\r\n        colors: '#FFFFFF'\r\n      }\r\n    };  \r\n    options.yaxis.labels = {\r\n      style: {\r\n        colors: '#FFFFFF'\r\n      }\r\n    };  \r\n    \r\n  }else{\r\n    options.xaxis.labels = {\r\n      style: {\r\n        colors: '#373d3f'\r\n      }\r\n    };\r\n    options.yaxis.labels = {\r\n      style: {\r\n        colors: '#373d3f'\r\n      }\r\n    };\r\n    \r\n  }\r\n  options.tooltip = {theme:data.theme };\r\n  return options;\r\n}\r\nexport default chartThemeHelper;","import React, { useState, useEffect } from \"react\";\r\nimport Chart from \"react-apexcharts\";\r\nimport Wrapper from '../HOC/Wrapper';\r\nimport styles from './Charts.module.css';\r\nimport { fetchDaily } from '../../api';\r\nimport useWindowDimensions from '../Helper/WindowDimensionHelper';\r\nimport ChartThemeHelper from '../../Theme/ChartThemeHelper';\r\n\r\nconst NewCharts = (props) => {\r\n  const { height, width } = useWindowDimensions();\r\n  const [dailyData, setDailyData] = useState({});\r\n  useEffect(() => {\r\n    const fetchApi = async () => {\r\n      if(dailyData && dailyData.options && dailyData.series){\r\n        const curState = {...dailyData};\r\n        const options = ChartThemeHelper({ dates:curState.dates, theme: props.curTheme });\r\n        curState.options = options;\r\n        setDailyData({dates : curState.dates,options: curState.options, series: curState.series});\r\n      }else{\r\n        const data = await fetchDaily();\r\n        const dates = data.map(({ date }) => date);\r\n        const options = ChartThemeHelper({ dates, theme: props.curTheme });\r\n  \r\n        const series = [\r\n          {\r\n            name: \"Confirmed\",\r\n            data: data.map(({ confirmed }) => confirmed)\r\n          },\r\n          {\r\n            name: \"Deaths\",\r\n            data: data.map(({ deaths }) => deaths)\r\n          }\r\n        ];\r\n        setDailyData({ dates, options: options, series: series });\r\n      }\r\n      \r\n    }\r\n\r\n    fetchApi();\r\n    // eslint-disable-next-line\r\n  }, [props.curTheme]);//we GET chart data only once but re-render in case the theme changes\r\n  \r\n  let lineChart = (\r\n    dailyData && dailyData.options && dailyData.series ? <Chart\r\n      options={dailyData.options}\r\n      series={dailyData.series}\r\n      type=\"area\"\r\n      width={width < 768 ? width : 0.85 * width}\r\n      height={0.6 * height}\r\n    /> : \"\"\r\n  );\r\n  return (\r\n    <Wrapper className={styles.container}>\r\n      {lineChart}\r\n    </Wrapper>\r\n\r\n  );\r\n\r\n}\r\n\r\nexport default NewCharts;","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport Light from '@material-ui/icons/Brightness7';\r\nimport Dark from '@material-ui/icons/Brightness4';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchDark: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.black, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.black, 0.25),\r\n    },\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: '12ch',\r\n      '&:focus': {\r\n        width: '20ch',\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function HeaderAppBar(props) {\r\n  const classes = useStyles();\r\n  \r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"fixed\">\r\n        <Toolbar>\r\n          <Typography className={classes.title} variant=\"h6\" noWrap>\r\n            Covid-19 Tracker\r\n          </Typography>\r\n          <div className={props.curTheme === \"light\" ? classes.searchDark : classes.search }>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              placeholder=\"Search…\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ 'aria-label': 'search' }}\r\n            />\r\n          </div>\r\n          <IconButton\r\n            edge=\"end\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"Toggle Dark and Light mode\"\r\n            onClick={() => props.themeToggleHandler()}>\r\n            {props.curTheme === \"light\" ? <Light /> : <Dark />}\r\n\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nconst themeHelper = (theme) => {\r\n    if (theme === \"light\") {\r\n        return createMuiTheme({\r\n            palette: {\r\n              primary: {\r\n                main : \"#FFFFFF\"\r\n              },\r\n              type:\"light\"\r\n            }\r\n        });\r\n    } else {\r\n        return createMuiTheme({\r\n            palette: {\r\n              primary: {\r\n                main : \"#202020\"\r\n              },\r\n              type:\"dark\"\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport default themeHelper;","import React from 'react';\r\nimport { Cards, Wrapper, AppBar,NewCharts } from './Components';\r\nimport styles from './App.module.css';\r\nimport { fetchSummary } from './api';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport ThemeHelper from './Theme/ThemeHelper';\r\nimport cx from 'classnames';\r\n\r\nlet light = \"light\",dark=\"dark\";\r\nclass App extends React.Component {\r\n\r\n  state = {\r\n    summary: {},\r\n    theme:light\r\n  }\r\n  render() {    \r\n    let bgClass = this.state.theme === light ? styles.light : styles.dark;\r\n    return (\r\n      <ThemeProvider theme={ThemeHelper(this.state.theme)}>\r\n        <AppBar curTheme={this.state.theme} themeToggleHandler={() => this.toggleTheme()}></AppBar>\r\n        <Wrapper className={cx(styles.container,bgClass)}>\r\n          <Cards data={this.state.summary}></Cards>\r\n          <NewCharts curTheme={this.state.theme}></NewCharts>         \r\n        </Wrapper>\r\n      </ThemeProvider>\r\n    );\r\n  }\r\n  async componentDidMount() {\r\n    let response = await fetchSummary();\r\n    this.setState({ summary: response.data });    \r\n  }\r\n  \r\n  toggleTheme = () =>{\r\n    this.state.theme === light ? this.setState({theme:dark}) : this.setState({theme:light});\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Charts_container__mmPiY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3nRKY\",\"dark\":\"App_dark__2RHWN\",\"light\":\"App_light__1YEDc\"};","module.exports = __webpack_public_path__ + \"static/media/confirmed.df488cb3.svg\";","module.exports = __webpack_public_path__ + \"static/media/deaths.4e113c7e.svg\";","module.exports = __webpack_public_path__ + \"static/media/recovered.011ed21c.svg\";"],"sourceRoot":""}